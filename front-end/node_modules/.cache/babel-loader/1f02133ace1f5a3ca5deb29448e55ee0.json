{"ast":null,"code":"var _jsxFileName = \"/Users/wongweijie/Citi-Hackathon/citi-ezVerify/front-end/src/App.js\";\nimport React, { Fragment } from 'react';\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport AuthPage from \"./AuthPage/AuthPage\";\nimport RequestPage from \"./RequestPage/RequestPage\";\nimport SuccessfulRequestPage from './RequestPage/SuccessfulRequestPage';\nimport SuccessfulAuthPage from './AuthPage/SuccessfulAuthPage';\n\nfunction componentDidMount() {\n  // Call our fetch function below once the component mounts\n  this.callBackendAPI().then(res => this.setState({\n    data: res.express\n  })).catch(err => console.log(err));\n}\n\n; // Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\n\nvar callBackendAPI = async () => {\n  const response = await fetch('/express_backend');\n  const body = await response.json();\n\n  if (response.status !== 200) {\n    throw Error(body.message);\n  }\n\n  return body;\n};\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    component: RequestPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/auth/:id\",\n    exact: true,\n    component: AuthPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/requestsuccess\",\n    exact: true,\n    component: SuccessfulRequestPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: \"/authsuccess/:id\",\n    exact: true,\n    component: SuccessfulAuthPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    render: () => /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 28\n      }\n    }, \"404: page not found\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/wongweijie/Citi-Hackathon/citi-ezVerify/front-end/src/App.js"],"names":["React","Fragment","BrowserRouter","Router","Route","Link","Switch","AuthPage","RequestPage","SuccessfulRequestPage","SuccessfulAuthPage","componentDidMount","callBackendAPI","then","res","setState","data","express","catch","err","console","log","response","fetch","body","json","status","Error","message","App"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,IAAzC,EAA+CC,MAA/C,QAA6D,kBAA7D;AACA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,qBAAP,MAAkC,qCAAlC;AACA,OAAOC,kBAAP,MAA+B,+BAA/B;;AAEA,SAASC,iBAAT,GAA6B;AAC3B;AACF,OAAKC,cAAL,GACGC,IADH,CACQC,GAAG,IAAI,KAAKC,QAAL,CAAc;AAAEC,IAAAA,IAAI,EAAEF,GAAG,CAACG;AAAZ,GAAd,CADf,EAEGC,KAFH,CAESC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAFhB;AAGC;;AAAA,C,CACD;;AACA,IAAIP,cAAc,GAAG,YAAY;AACjC,QAAMU,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAD,CAA5B;AACA,QAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AAEA,MAAIH,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,UAAMC,KAAK,CAACH,IAAI,CAACI,OAAN,CAAX;AACD;;AACD,SAAOJ,IAAP;AACC,CARD;;AAUA,SAASK,GAAT,GAAe;AAEb,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,KAAK,MAArB;AAAsB,IAAA,SAAS,EAAErB,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,WAAZ;AAAwB,IAAA,KAAK,MAA7B;AAA8B,IAAA,SAAS,EAAED,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,iBAAZ;AAA8B,IAAA,KAAK,MAAnC;AAAoC,IAAA,SAAS,EAAEE,qBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,kBAAZ;AAA+B,IAAA,KAAK,MAApC;AAAqC,IAAA,SAAS,EAAEC,kBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAKE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAE,mBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADA,CADA,CADF;AAaD;;AAGD,eAAemB,GAAf","sourcesContent":["import React, {Fragment} from 'react';\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport AuthPage from \"./AuthPage/AuthPage\";\nimport RequestPage from \"./RequestPage/RequestPage\";\nimport SuccessfulRequestPage from './RequestPage/SuccessfulRequestPage';\nimport SuccessfulAuthPage from './AuthPage/SuccessfulAuthPage';\n\nfunction componentDidMount() {\n  // Call our fetch function below once the component mounts\nthis.callBackendAPI()\n  .then(res => this.setState({ data: res.express }))\n  .catch(err => console.log(err));\n};\n// Fetches our GET route from the Express server. (Note the route we are fetching matches the GET route from server.js\nvar callBackendAPI = async () => {\nconst response = await fetch('/express_backend');\nconst body = await response.json();\n\nif (response.status !== 200) {\n  throw Error(body.message)\n}\nreturn body;\n};\n\nfunction App() {\n\n  return (\n    <Router>\n    <main>\n    <Switch>\n      <Route path=\"/\" exact component={RequestPage} />\n      <Route path=\"/auth/:id\" exact component={AuthPage} />\n      <Route path=\"/requestsuccess\" exact component={SuccessfulRequestPage} />\n      <Route path=\"/authsuccess/:id\" exact component={SuccessfulAuthPage} />\n      <Route render={() => <h1>404: page not found</h1>} />\n    </Switch>\n    </main>\n</Router>\n  );\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}
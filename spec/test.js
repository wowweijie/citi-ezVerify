const utils = require('../utils');


const webAuthnResponse = {rawId:"Xw5xvK89yUUwUH8MnXwWohXGtbw",
      response:{
          attestationObject:"o2NmbXRlYXBwbGVnYXR0U3RtdKJjYWxnJmN4NWOCWQJHMIICQzCCAcmgAwIBAgIGAXTEmRl4MAoGCCqGSM49BAMCMEgxHDAaBgNVBAMME0FwcGxlIFdlYkF1dGhuIENBIDExEzARBgNVBAoMCkFwcGxlIEluYy4xEzARBgNVBAgMCkNhbGlmb3JuaWEwHhcNMjAwOTI1MDkyMDAxWhcNMjAwOTI2MDkzMDAxWjCBkTFJMEcGA1UEAwxAOTBhYWQzYmIyN2RiN2QxOTZkMjlmZDRiMGZkMjU2ZjA5NDg3MmE1Y2U4ODQyMjFlYmFiMWNiY2JlNmQ1NThhYzEaMBgGA1UECwwRQUFBIENlcnRpZmljYXRpb24xEzARBgNVBAoMCkFwcGxlIEluYy4xEzARBgNVBAgMCkNhbGlmb3JuaWEwWTATBgcqhkjOPQIBBggqhkjOPQMBBwNCAAQplBCXtdj3fsLoTk3uoW9kqebRjUBUEeLNmF5ETnSSSnYxvpRO40gI151tnNTFoPYk1bjs-n9OtUpm7VzVa60Vo1UwUzAMBgNVHRMBAf8EAjAAMA4GA1UdDwEB_wQEAwIE8DAzBgkqhkiG92NkCAIEJjAkoSIEIFzS3RdBOM98f1IKrEOYiI0EpvYgBkcmxdkGcJ-DrGdsMAoGCCqGSM49BAMCA2gAMGUCMQD-FDrgoUhjyGEcguGReVDGBdmjhPkKeiwyk9pmzXB6QIm705lXCzWzTa7YwIN6nOECMBmANvpvfB39wWvGcBtuGeCvTqR0fKeYfu1jVdMDU_88DQqfcUm2qXjxraiybfHellkCODCCAjQwggG6oAMCAQICEFYlU5XHp_tA6-Io2CYIU7YwCgYIKoZIzj0EAwMwSzEfMB0GA1UEAwwWQXBwbGUgV2ViQXV0aG4gUm9vdCBDQTETMBEGA1UECgwKQXBwbGUgSW5jLjETMBEGA1UECAwKQ2FsaWZvcm5pYTAeFw0yMDAzMTgxODM4MDFaFw0zMDAzMTMwMDAwMDBaMEgxHDAaBgNVBAMME0FwcGxlIFdlYkF1dGhuIENBIDExEzARBgNVBAoMCkFwcGxlIEluYy4xEzARBgNVBAgMCkNhbGlmb3JuaWEwdjAQBgcqhkjOPQIBBgUrgQQAIgNiAASDLocvJhSRgQIlufX81rtjeLX1Xz_LBFvHNZk0df1UkETfm_4ZIRdlxpod2gULONRQg0AaQ0-yTREtVsPhz7_LmJH-wGlggb75bLx3yI3dr0alruHdUVta-quTvpwLJpGjZjBkMBIGA1UdEwEB_wQIMAYBAf8CAQAwHwYDVR0jBBgwFoAUJtdk2cV4wlpn0afeaxLQG2PxxtcwHQYDVR0OBBYEFOuugsT_oaxbUdTPJGEFAL5jvXeIMA4GA1UdDwEB_wQEAwIBBjAKBggqhkjOPQQDAwNoADBlAjEA3YsaNIGl-tnbtOdle4QeFEwnt1uHakGGwrFHV1Azcifv5VRFfvZIlQxjLlxIPnDBAjAsimBE3CAfz-Wbw00pMMFIeFHZYO1qdfHrSsq-OM0luJfQyAW-8Mf3iwelccboDgdoYXV0aERhdGFYmIOkpOMkj1nDWKeA1teL5G9vWEXgndg7SwOprD7dQ4qLRQAAAAAAAAAAAAAAAAAAAAAAAAAAABRfDnG8rz3JRTBQfwydfBaiFca1vKUBAgMmIAEhWCAplBCXtdj3fsLoTk3uoW9kqebRjUBUEeLNmF5ETnSSSiJYIHYxvpRO40gI151tnNTFoPYk1bjs-n9OtUpm7VzVa60V",
          clientDataJSON:"eyJ0eXBlIjoid2ViYXV0aG4uY3JlYXRlIiwiY2hhbGxlbmdlIjoiTUdMc"
      }
    };

let result = utils.verifyAuthenticatorAttestationResponse(webAuthnResponse);

describe("verifyAuthenticatorAttestationResponse", () => {
    it("returns true if the string is a palindrome", () => {
      expect(result.verified).toEqual(true);
    });
  });